[package]
name = "floresta-chain"
version = "0.1.0"
edition = "2021"
authors = ["Davidson Souza <davidson.lucas.souza@outlook.com>"]
description = """
    Reusable components for building consensus-critical Bitcoin applications.
    Using floresta-chain, you can create a Bitcoin node that validates blocks
    and transactions, acording to the Bitcoin consensus rules.
"""
repository = "https://github.com/Davidson-Souza/Floresta"
license = "MIT"
readme = "README.md"
keywords = ["bitcoin", "utreexo", "node", "consensus"]
categories = ["bitcoin", "blockchain", "node"]

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
rustreexo = "0.2.0"
sha2 = "^0.10.6"
log = "0.4"
kv = "0.24.0"
bitcoin = { version = "0.31", features = [
    "serde",
    "no-std",
], default-features = false }
spin = "0.9.8"
core2 = { version = "0.4.0", default-features = false }
hashbrown = { version = "0.14.0", optional = true }
secp256k1 = { version = "*", features = ["alloc"], optional = true }
async-std = { version = "1.12.0", default-features = false, features = [
    "std",
    "futures-core",
] }
floresta-common = { path = "../floresta-common", default-features = false }
futures = "0.3.28"

[dev-dependencies]
rand = "0.8.5"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
zstd = "0.12.3"
hex = "0.4.3"

[features]
bitcoinconsensus = ["bitcoin/bitcoinconsensus"]
