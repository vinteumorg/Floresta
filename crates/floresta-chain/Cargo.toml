[package]
name = "floresta-chain"
version = "0.4.0"
edition = "2021"
authors = ["Davidson Souza <davidson.lucas.souza@outlook.com>"]
description = """
    Reusable components for building consensus-critical Bitcoin applications.
    Using floresta-chain, you can create a Bitcoin node that validates blocks
    and transactions, according to the Bitcoin consensus rules.
"""
repository = "https://github.com/vinteumorg/Floresta"
license = "MIT"
readme.workspace = true # Floresta/README.md
keywords = ["bitcoin", "utreexo", "node", "consensus"]
categories = ["cryptography::cryptocurrencies", "database"]

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
bitcoin = { workspace = true, features = [ "serde" ] }
bitcoinconsensus = { version = "0.106", optional = true, default-features = false }
kv = { workspace = true, optional = true }
lru = { version = "0.16", optional = true }
memmap2 = { version = "0.9", optional = true }
rustreexo = { workspace = true }
serde = { workspace = true, optional = true }
sha2 = { workspace = true, features = ["std"] }
spin = { workspace = true }
tracing = { workspace = true }
xxhash-rust = { version = "0.8", features = ["xxh3"] }

# Local dependencies
floresta-common = { workspace = true, features = ["std"] }
metrics = { workspace = true,  optional = true }

[dev-dependencies]
criterion = "0.5"
hex = { workspace = true }
rand = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
tempfile = "3.23"
zstd = { workspace = true }

[features]
default = []
bitcoinconsensus = ["bitcoin/bitcoinconsensus", "dep:bitcoinconsensus"]
metrics = ["dep:metrics"]
test-utils = ["dep:serde"]
flat-chainstore = ["dep:memmap2", "dep:lru"]
kv-chainstore = ["dep:kv"]

[[bench]]
name = "chain_state_bench"
harness = false
required-features = ["test-utils"]

[lints]
workspace = true
