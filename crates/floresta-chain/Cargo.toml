[package]
name = "floresta-chain"
version = "0.4.0"
edition = "2021"
authors = ["Davidson Souza <davidson.lucas.souza@outlook.com>"]
description = """
    Reusable components for building consensus-critical Bitcoin applications.
    Using floresta-chain, you can create a Bitcoin node that validates blocks
    and transactions, according to the Bitcoin consensus rules.
"""
repository = "https://github.com/vinteumorg/Floresta"
license = "MIT"
readme.workspace = true # Floresta/README.md

keywords = ["bitcoin", "utreexo", "node", "consensus"]
categories = ["cryptography::cryptocurrencies", "database"]

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
rustreexo = "0.4"
sha2 = "^0.10.6"
kv = { version = "0.24.0", optional = true }
bitcoin = { version = "0.32", features = [
    "serde",
], default-features = false }
spin = "0.9.8"
floresta-common = { path = "../floresta-common", default-features = false, features = ["std"] }
bitcoinconsensus = { version = "0.106.0", optional = true, default-features = false }
metrics = { path = "../../metrics", optional = true }
serde = { version = "1.0", features = ["derive"], optional = true }
memmap2 = { version = "0.9.5", optional = true }
lru = { version = "0.12.5", optional = true }
xxhash-rust = { version = "0.8.15", features = ["xxh3"] }
tracing = "0.1.41"

[dev-dependencies]
criterion = "0.5.1"
rand = "0.8.5"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
zstd = "0.13.3"
hex = "0.4.3"
tempfile = "3.20.0"

[features]
default = []
bitcoinconsensus = ["bitcoin/bitcoinconsensus", "dep:bitcoinconsensus"]
metrics = ["dep:metrics"]
test-utils = ["dep:serde"]
flat-chainstore = ["dep:memmap2", "dep:lru"]
kv-chainstore = ["dep:kv"]

[[bench]]
name = "chain_state_bench"
harness = false
required-features = ["test-utils"]

[lints]
workspace = true
